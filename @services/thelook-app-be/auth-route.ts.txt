
export default async function authRoutePlugin(fastify, options) {
    server.get<{
        Querystring: IQuerystring,
        Headers: IHeaders,
        Reply: IReply
      }>('/auth', async (request: FastifyRequest<{
        Querystring: IQuerystring,
        Headers: IHeaders
      }>, reply: FastifyReply) => {
        try {
          const { username, password } = request.query
          const customHeader = request.headers['h-custom']
          
          // Log request untuk debugging (bisa dihapus di production)
          request.log.info({ username, customHeader }, 'Auth request received')
          
          // Validasi input
          const validationError = validateAuthInput(username, password)
          if (validationError) {
            return reply.code(400).send({
              success: false,
              error: validationError
            })
          }
          
          // Cek autentikasi
          const user = users.find(u => u.username === username && u.password === password)
          if (!user) {
            return reply.code(401).send({
              success: false,
              error: 'Invalid username or password'
            })
          }
          
          // Verifikasi header jika diperlukan
          if (user.role === 'admin' && customHeader !== 'secret-admin-key') {
            return reply.code(403).send({
              success: false,
              error: 'Missing or invalid custom header for admin access'
            })
          }
          
          // Sukses - kembalikan data user (tanpa password)
          const { password: _, ...userWithoutPassword } = user
          return reply.code(200).send({
            success: true,
            user: userWithoutPassword
          })
        } catch (err) {
          request.log.error(err, 'Error processing auth request')
          return reply.code(500).send({
            success: false,
            error: 'Internal server error'
          })
        }
      })
    
    // Definisi dan registrasi route tetap sama seperti sebelumnya
    fastify.get('/auth', { ... })
  }